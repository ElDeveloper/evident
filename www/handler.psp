<html>
<head>
<link rel="stylesheet" href="css/e-vident.css" type="text/css">
<title>Evident</title>
<script type="text/javascript" src="js/jquery-1.7.1.min.js"></script>
<script type="text/javascript" src="js/jquery-ui-1.8.17.custom.min.js"></script>
<script type="text/javascript" >
function loaded() {
	var img = window.top.document.getElementById("loading");
	img.parentNode.removeChild(img);
}
</script>
</head>
<body onload="loaded()">
<%
__author__ = "Antonio Gonzalez Pena"
__copyright__ = "Copyright 2011-2012, Evident"
__credits__ = ["Antonio Gonzalez Pena"]
__license__ = "GPL"
__version__ = "0.1.dev"
__maintainer__ = ["Antonio Gonzalez Pena"]
__email__ = "antgonza@gmail.com"
__status__ = "Development"

"""
This script coordinates the interactions between the index page and the rest of the libraries
"""

from mod_python import Session

from time import time

from evident.demo import demo
from evident.pcoa import generate_pcoa_cloud_from_point_in_omega, make_pcoa_webgl_string_from_files
from evident.rarefaction import generate_alpha_rarefaction_plots_from_point_in_omega
from evident.error import raiseApacheError

from qiime.parse import parse_newick, parse_coords


import logging

def getjsdata():
	req.write(jsdata)


####
#### Main
####
max_iterations = 10
min_sequences  = 10

# Converting in int some form vars
form_input = {}
form_input['study']		 = session['study']
form_input['iterations'] = int(req.form['iterations'])
form_input['sequences']	 = session['sequences']
form_input['viz']		 = req.form['viz']
form_input['demo']		 = session['demo']

# Validating that number of iterations is reasonable
if max_iterations<form_input['iterations']:
	raiseApacheError('<b>Sorry we can not process more than %s iterations.</b>' % (max_iterations))

# Tree data
tree_fp		= '/evident/data/gg_97_otus_4feb2011.tre'
pcoa_fp		= '/evident/data/' + session['filename'] + '_unweighted_unifrac_pc.txt'
tree_object = parse_newick(open(tree_fp))

# Choosing visualization
if form_input['viz']=='pcoa':
	# Starting PCoA
	start_time = time()
	if form_input['demo']!="true":
		try:
			webgl_string = generate_pcoa_cloud_from_point_in_omega(
										mapping_file_tuple=session['mapping_file_tuple'],
										biom_object=session['filtered_biom_table'],
										metric='unifrac',
										sequences=form_input['sequences'],
										iterations=form_input['iterations'],
										axes=3,
										tree_object=tree_object)
		except ValueError:
			raiseApacheError('<b>Could not create the PCoA plot, the ellipsoids were not created succesfully</b>')
	else:
		pcoa_headers, points, eigvals, pct_var = parse_coords(open(pcoa_fp,'U'))
		webgl_string = make_pcoa_webgl_string_from_files(pcoa_headers, points, pct_var, session['interesting_headers'], session['interesting_data'])

	logging.debug('PCoA:	%f', time()-start_time)

	# Emperor
	start_time = time()
	req.write(open('/evident/www/emperor/emperor_head.html','U').read())
	req.write(webgl_string)
	req.write(open('/evident/www/emperor/emperor.html','U').read())

	logging.debug('Emperor: %f', time()-start_time)

elif form_input['viz']=='alpha_stddev' or form_input['viz']=='alpha_stderr':
	if form_input['study'] in ['hmp-v13','hmp-v35']:
		raiseApacheError('Functionality not implemented for this study')

	if form_input['demo']!="true":
		min_depth = 10
		if form_input['sequences']==min_depth:
			raiseApacheError('The min number of sequences for alpha diversity is 15, so you need to select at least this number')
		html_string = generate_alpha_rarefaction_plots_from_point_in_omega(
			mapping_file_tuple=session['mapping_file_tuple'],
			biom_object=session['filtered_biom_table'],
			metrics=['observed_species','Chao1', 'PD_whole_tree'],
			sequences=form_input['sequences'],
			iterations=form_input['iterations'],
			tree_object=tree_object, std_type=form_input['viz'][6:])
	else:
		html_string = '\n'.join(open(alpha_fp,'U').readlines())

	req.write(html_string)
elif form_input['viz']=='taxonomy' :
	raiseApacheError('Functionality not implemented')
else:
	raiseApacheError('Visualization <u>%s</u> does not exist' % form_input['viz'])

%>

</body>
</html>
